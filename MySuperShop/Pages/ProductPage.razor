@page "/products/{ProductId:guid}"

@inject IMyShopClient Client

<MudGrid>
    @if (_product is null)
    {
        <MudItem>
            <MudText Typo="Typo.h6" Align="Align.Center" Class="ma-20">Товар загружается</MudText>
        </MudItem>
    }
    else
    {
        <MudCard>
            <MudCardContent>
                <MudForm ReadOnly="ReadOnly">
                    <MudTextField T="string" Typo="Typo.h3" Class="mb-4" @bind-Value="_name" Label="Наименование"/>
                    <MudItem lg="4" md="6" sm="12">
                        <img width="300" src="@_picAddress" alt="@_name"/>
                    </MudItem>
                    <MudNumericField T="decimal" Typo="Typo.h4" Class="mb-4" @bind-Value="_price" Label="Цена, руб "/>
                    <MudTextField T="string" Typo="Typo.body1" Class="mb-4" Label="Описание" @bind-Value="_description" />
                    <MudNumericField T="double" Typo="Typo.body1" Class="mb-4" @bind-Value="_stock" Label="Количество "/>
                </MudForm>
            </MudCardContent>
        </MudCard>
    }
</MudGrid>
<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Update" Color="Color.Warning" Size="Size.Large">Edit</MudButton>
<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" IconColor="Color.Secondary" Size="Size.Large">Save</MudButton>

@code {
	[Parameter]
	public Guid ProductId { get; set; }
	private Product? _product;
    bool ReadOnly = true;
    private string _name;
    private string _description;
    private decimal _price;
    private string _picAddress;
    private double _stock;

	protected override async Task OnInitializedAsync()
	{ 
		await base.OnInitializedAsync();
	    _product = await Client.GetProduct(ProductId);
	    _name = _product.Name;
	    _description = _product.Description ?? "";
	    _price = _product.Price;
	    _picAddress = _product.Pic ?? "";
	    _stock = _product.Stock;
	}
}
